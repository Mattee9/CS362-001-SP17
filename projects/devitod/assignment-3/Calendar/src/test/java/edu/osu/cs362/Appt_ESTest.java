/*
 * This file was automatically generated by EvoSuite
 * Tue May 16 00:20:02 GMT 2017
 */

package edu.osu.cs362;

import org.junit.Test;
import static org.junit.Assert.*;
import edu.osu.cs362.Appt;
//import org.evosuite.runtime.EvoRunner;
//import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

//@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class Appt_ESTest { // extends Appt_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      Appt appt0 = new Appt(23, 23, 23, 1, 1, ".hb4& L5g", ".hb4& L5g");
      appt0.setStartHour(11);
      appt0.toString();
      assertEquals(11, appt0.getStartHour());
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      Appt appt0 = new Appt((-883), (-883), (-883), 0, 0, "", "");
      appt0.setStartMinute(0);
      appt0.setStartDay(31);
      appt0.setStartHour(0);
      assertEquals(31, appt0.getStartDay());
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      Appt appt0 = new Appt((-2911), (-2911), (-2911), 1, 1, "ZH<c", (String) null);
      boolean boolean0 = appt0.getValid();
      assertFalse(boolean0);
      assertEquals(1, appt0.getStartYear());
      assertEquals((-2911), appt0.getStartHour());
      assertEquals((-2911), appt0.getStartDay());
      assertEquals((-2911), appt0.getStartMinute());
      assertEquals(1, appt0.getStartMonth());
      assertEquals("ZH<c", appt0.getTitle());
      assertEquals("", appt0.getDescription());
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      Appt appt0 = new Appt(23, 23, 23, 1, 1, ".hb4& L5g", ".hb4& L5g");
      String string0 = appt0.getTitle();
      assertTrue(appt0.getValid());
      assertEquals(23, appt0.getStartDay());
      assertEquals(".hb4& L5g", string0);
      assertEquals(23, appt0.getStartHour());
      assertEquals(23, appt0.getStartMinute());
      assertEquals(1, appt0.getStartYear());
      assertEquals(1, appt0.getStartMonth());
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      Appt appt0 = new Appt((-2180), 0, 0, 0, 0, "", "");
      int int0 = appt0.getStartYear();
      assertEquals((-2180), appt0.getStartHour());
      assertEquals(0, appt0.getStartMinute());
      assertEquals(0, appt0.getStartMonth());
      assertEquals(0, appt0.getStartDay());
      assertFalse(appt0.getValid());
      assertEquals(0, int0);
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      Appt appt0 = new Appt((-883), (-883), (-883), 0, 0, "", "");
      appt0.setStartYear(31);
      int int0 = appt0.getStartYear();
      assertEquals(31, int0);
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      Appt appt0 = new Appt((-883), (-883), (-883), 0, 0, "", "");
      int int0 = appt0.getStartMonth();
      assertEquals((-883), appt0.getStartMinute());
      assertEquals(0, appt0.getStartYear());
      assertEquals((-883), appt0.getStartDay());
      assertFalse(appt0.getValid());
      assertEquals(0, int0);
      assertEquals((-883), appt0.getStartHour());
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      Appt appt0 = new Appt((-1559), (-484), (-1559), (-484), (-1559), "", (String) null);
      int int0 = appt0.getStartMonth();
      assertEquals((-1559), appt0.getStartHour());
      assertEquals((-1559), appt0.getStartDay());
      assertEquals((-484), int0);
      assertFalse(appt0.getValid());
      assertEquals((-484), appt0.getStartMinute());
      assertEquals((-1559), appt0.getStartYear());
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      Appt appt0 = new Appt(0, 0, 0, 0, 0, "5#2gi;Ot)pmw)T]<Z", (String) null);
      int int0 = appt0.getStartMinute();
      assertEquals(0, appt0.getStartHour());
      assertEquals("", appt0.getDescription());
      assertEquals(0, appt0.getStartYear());
      assertEquals(0, int0);
      assertEquals(0, appt0.getStartDay());
      assertEquals("5#2gi;Ot)pmw)T]<Z", appt0.getTitle());
      assertFalse(appt0.getValid());
      assertEquals(0, appt0.getStartMonth());
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      Appt appt0 = new Appt((-1), (-1076), 3334, (-1069), (-1069), "rx 2.W+s\"4%Yrh", "rx 2.W+s\"4%Yrh");
      int int0 = appt0.getStartMinute();
      assertEquals((-1069), appt0.getStartMonth());
      assertFalse(appt0.getValid());
      assertEquals((-1069), appt0.getStartYear());
      assertEquals((-1076), int0);
      assertEquals(3334, appt0.getStartDay());
      assertEquals("rx 2.W+s\"4%Yrh", appt0.getDescription());
      assertEquals("rx 2.W+s\"4%Yrh", appt0.getTitle());
      assertEquals((-1), appt0.getStartHour());
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      Appt appt0 = new Appt(0, 531, 0, 190, 0, "", "");
      int int0 = appt0.getStartHour();
      assertEquals(0, appt0.getStartDay());
      assertEquals(531, appt0.getStartMinute());
      assertEquals(0, int0);
      assertEquals(190, appt0.getStartMonth());
      assertEquals(0, appt0.getStartYear());
      assertFalse(appt0.getValid());
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      Appt appt0 = new Appt((-1140), 3574, 4653, 4653, 4653, " at ", "#6yFPt\"J(");
      int int0 = appt0.getStartHour();
      assertEquals((-1140), int0);
      assertEquals("#6yFPt\"J(", appt0.getDescription());
      assertEquals(4653, appt0.getStartMonth());
      assertEquals(3574, appt0.getStartMinute());
      assertEquals(4653, appt0.getStartDay());
      assertEquals(" at ", appt0.getTitle());
      assertFalse(appt0.getValid());
      assertEquals(4653, appt0.getStartYear());
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      Appt appt0 = new Appt((-883), (-883), (-883), 0, 0, "", "");
      assertEquals((-883), appt0.getStartDay());
      
      appt0.setStartDay(0);
      int int0 = appt0.getStartDay();
      assertEquals(0, int0);
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      Appt appt0 = new Appt((-883), (-883), (-883), 0, 0, "", "");
      appt0.setStartDay(31);
      int int0 = appt0.getStartDay();
      assertEquals(31, int0);
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      Appt appt0 = new Appt(1, 1, 59, 59, 59, "", "");
      appt0.getDescription();
      assertEquals(59, appt0.getStartYear());
      assertEquals(59, appt0.getStartMonth());
      assertEquals(59, appt0.getStartDay());
      assertEquals(1, appt0.getStartHour());
      assertEquals(1, appt0.getStartMinute());
      assertFalse(appt0.getValid());
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      Appt appt0 = new Appt((-1), (-1), 0, (-1659), (-1), "", "");
      appt0.setDescription("");
      assertEquals((-1), appt0.getStartMinute());
      assertFalse(appt0.getValid());
      assertEquals((-1), appt0.getStartHour());
      assertEquals((-1), appt0.getStartYear());
      assertEquals((-1659), appt0.getStartMonth());
      assertEquals(0, appt0.getStartDay());
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      Appt appt0 = new Appt(441, 441, 441, 441, 3792, "", "");
      appt0.setDescription((String) null);
      assertEquals(3792, appt0.getStartYear());
      assertFalse(appt0.getValid());
      assertEquals(441, appt0.getStartDay());
      assertEquals(441, appt0.getStartMonth());
      assertEquals(441, appt0.getStartMinute());
      assertEquals(441, appt0.getStartHour());
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      Appt appt0 = new Appt(11, 11, (-1117), 11, (-1117), (String) null, (String) null);
      appt0.setTitle((String) null);
      assertEquals(11, appt0.getStartMinute());
      assertEquals(11, appt0.getStartMonth());
      assertEquals((-1117), appt0.getStartYear());
      assertFalse(appt0.getValid());
      assertEquals(11, appt0.getStartHour());
      assertEquals((-1117), appt0.getStartDay());
  }

  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      Appt appt0 = new Appt((-883), (-883), (-883), 0, 0, "", "");
      appt0.getTitle();
      assertEquals(0, appt0.getStartMonth());
      assertEquals(0, appt0.getStartYear());
      assertEquals((-883), appt0.getStartDay());
      assertEquals((-883), appt0.getStartMinute());
      assertEquals((-883), appt0.getStartHour());
      assertFalse(appt0.getValid());
  }

  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      Appt appt0 = new Appt((-5354), (-5354), (-5354), (-5354), (-5354), "/", "/");
      int int0 = appt0.getStartDay();
      assertEquals((-5354), appt0.getStartMinute());
      assertEquals((-5354), int0);
      assertEquals((-5354), appt0.getStartHour());
      assertEquals((-5354), appt0.getStartYear());
      assertFalse(appt0.getValid());
      assertEquals((-5354), appt0.getStartMonth());
      assertEquals("/", appt0.getDescription());
      assertEquals("/", appt0.getTitle());
  }

  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      Appt appt0 = new Appt(23, 23, 23, 1, 1, ".hb4& L5g", ".hb4& L5g");
      boolean boolean0 = appt0.getValid();
      assertEquals(23, appt0.getStartHour());
      assertEquals(1, appt0.getStartMonth());
      assertEquals(".hb4& L5g", appt0.getDescription());
      assertTrue(boolean0);
      assertEquals(1, appt0.getStartYear());
      assertEquals(23, appt0.getStartMinute());
      assertEquals(23, appt0.getStartDay());
      assertEquals(".hb4& L5g", appt0.getTitle());
  }

  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      Appt appt0 = new Appt(23, 23, 23, 1, 1, ".hb4& L5g", ".hb4& L5g");
      int int0 = appt0.getStartHour();
      assertEquals(1, appt0.getStartMonth());
      assertEquals(".hb4& L5g", appt0.getTitle());
      assertEquals(23, int0);
      assertEquals(1, appt0.getStartYear());
      assertEquals(23, appt0.getStartMinute());
      assertEquals(23, appt0.getStartDay());
      assertEquals(".hb4& L5g", appt0.getDescription());
      assertTrue(appt0.getValid());
  }

  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      Appt appt0 = new Appt((-2), (-2), (-2), (-2), (-3272), "(~>#", "(~>#");
      int int0 = appt0.getStartYear();
      assertFalse(appt0.getValid());
      assertEquals((-2), appt0.getStartDay());
      assertEquals((-2), appt0.getStartMonth());
      assertEquals((-3272), int0);
      assertEquals((-2), appt0.getStartHour());
      assertEquals((-2), appt0.getStartMinute());
      assertEquals("(~>#", appt0.getDescription());
      assertEquals("(~>#", appt0.getTitle());
  }

  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      Appt appt0 = new Appt(23, 23, 23, 1, 1, ".hb4& L5g", ".hb4& L5g");
      int int0 = appt0.getStartMinute();
      assertTrue(appt0.getValid());
      assertEquals(23, appt0.getStartDay());
      assertEquals(1, appt0.getStartYear());
      assertEquals(".hb4& L5g", appt0.getTitle());
      assertEquals(".hb4& L5g", appt0.getDescription());
      assertEquals(23, int0);
      assertEquals(1, appt0.getStartMonth());
      assertEquals(23, appt0.getStartHour());
  }

  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      Appt appt0 = new Appt(23, 23, 23, 1, 1, ".hb4& L5g", ".hb4& L5g");
      String string0 = appt0.getDescription();
      assertEquals(23, appt0.getStartMinute());
      assertEquals(".hb4& L5g", string0);
      assertEquals(23, appt0.getStartDay());
      assertTrue(appt0.getValid());
      assertEquals(".hb4& L5g", appt0.getTitle());
      assertEquals(1, appt0.getStartYear());
      assertEquals(23, appt0.getStartHour());
      assertEquals(1, appt0.getStartMonth());
  }

  @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      Appt appt0 = new Appt(23, 23, 23, 1, 1, ".hb4& L5g", ".hb4& L5g");
      int int0 = appt0.getStartMonth();
      assertTrue(appt0.getValid());
      assertEquals(1, appt0.getStartYear());
      assertEquals(1, int0);
      assertEquals(23, appt0.getStartDay());
      assertEquals(23, appt0.getStartMinute());
      assertEquals(23, appt0.getStartHour());
      assertEquals(".hb4& L5g", appt0.getTitle());
      assertEquals(".hb4& L5g", appt0.getDescription());
  }

  @Test(timeout = 4000)
  public void test26()  throws Throwable  {
      Appt appt0 = new Appt(12, 12, 12, 12, 12, ".hb 4& L5", ".hb 4& L5");
      String string0 = appt0.toString();
      assertNotNull(string0);
      assertEquals("\t12/12/12 at 12:12pm ,.hb 4& L5, .hb 4& L5\n", string0);
  }

  @Test(timeout = 4000)
  public void test27()  throws Throwable  {
      Appt appt0 = new Appt((-883), (-883), (-883), 0, 0, "", "");
      String string0 = appt0.toString();
      assertNull(string0);
      assertEquals(0, appt0.getStartMonth());
      assertEquals((-883), appt0.getStartDay());
      assertEquals((-883), appt0.getStartMinute());
      assertEquals((-883), appt0.getStartHour());
      assertEquals(0, appt0.getStartYear());
  }

  @Test(timeout = 4000)
  public void test28()  throws Throwable  {
      Appt appt0 = new Appt(23, 23, 23, 1, 1, ".hb4& L5g", ".hb4& L5g");
      assertEquals(1, appt0.getStartMonth());
      
      appt0.setStartMonth(23);
      assertEquals(1, appt0.getStartYear());
  }

  @Test(timeout = 4000)
  public void test29()  throws Throwable  {
      Appt appt0 = new Appt(0, 196, 0, 196, 196, "", "");
      appt0.setTitle("");
      assertEquals(196, appt0.getStartMonth());
      assertEquals(0, appt0.getStartDay());
      assertEquals(196, appt0.getStartYear());
      assertEquals(196, appt0.getStartMinute());
      assertEquals(0, appt0.getStartHour());
      assertFalse(appt0.getValid());
  }

  @Test(timeout = 4000)
  public void test30()  throws Throwable  {
      Appt appt0 = new Appt((-883), (-883), (-883), 0, 0, "", "");
      assertEquals((-883), appt0.getStartHour());
      
      appt0.setStartHour(0);
      assertEquals(0, appt0.getStartHour());
  }

  @Test(timeout = 4000)
  public void test31()  throws Throwable  {
      Appt appt0 = new Appt(59, 59, 59, (-1), 0, (String) null, (String) null);
      assertEquals(59, appt0.getStartHour());
      
      appt0.setStartHour(0);
      assertEquals((-1), appt0.getStartMonth());
  }

  @Test(timeout = 4000)
  public void test32()  throws Throwable  {
      Appt appt0 = new Appt(23, 23, 23, 1, 1, ".hb4& L5g", ".hb4& L5g");
      assertEquals(23, appt0.getStartHour());
      
      appt0.setStartHour(1);
      String string0 = appt0.toString();
      assertEquals("\t1/23/1 at 1:23am ,.hb4& L5g, .hb4& L5g\n", string0);
  }
}
